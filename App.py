import streamlit as st
import random
from datetime import date

# Streamlit 페이지 설정
st.set_page_config(page_title="건호 도윤의 영양만점 메뉴 선택기", page_icon="🍽️", layout="wide")

# CSS를 사용한 스타일 적용
st.markdown("""
<style>
    .reportview-container {
        background-color: #f0f8ff;
    }
    .big-font {
        font-size:30px !important;
        font-weight: bold;
        color: #1E90FF;
    }
    .medium-font {
        font-size:20px !important;
        color: #4682B4;
    }
    .small-font {
        font-size:14px !important;
        color: #4682B4;
    }
    .highlight {
        background-color: #F0F8FF;
        padding: 10px;
        border-radius: 5px;
    }
</style>
""", unsafe_allow_html=True)

# 제목과 날짜 추가
st.markdown('<p class="big-font">🏠 건호 도윤의 영양만점 메뉴 선택기 🍽️</p>', unsafe_allow_html=True)
st.markdown(f'<p class="medium-font">📅 오늘 날짜: {date.today().strftime("%Y년 %m월 %d일")}</p>', unsafe_allow_html=True)

# 탭 생성
tab1, tab2 = st.tabs(["🏠 저녁 메뉴 선택기", "🏫 성복초등학교 급식 메뉴"])

with tab1:
    # 메뉴 리스트와 영양 정보, 추천 보조 메뉴
    menus = {
        "만두국(찐만두 만두국)": {
            "칼로리": "약 300-400kcal",
            "탄수화물": "중",
            "단백질": "중",
            "지방": "낮음",
            "추천 보조 메뉴": "청경채 볶음, 오렌지 슬라이스"
        },
        "계란볶음밥+마라탕 (-라돌이마라땅)": {
            "칼로리": "약 600-700kcal",
            "탄수화물": "높음",
            "단백질": "중",
            "지방": "중",
            "추천 보조 메뉴": "양배추 샐러드, 키위"
        },
        "치즈돈가스+떡볶이+오뎅(-남문떡볶이)": {
            "칼로리": "약 800-900kcal",
            "탄수화물": "높음",
            "단백질": "높음",
            "지방": "높음",
            "추천 보조 메뉴": "오이 스틱, 방울토마토, 사과"
        },
        "페페로니 피자": {
            "칼로리": "약 700-800kcal",
            "탄수화물": "높음",
            "단백질": "중",
            "지방": "높음",
            "추천 보조 메뉴": "당근 스틱, 브로콜리, 포도"
        },
        "짜장면": {
            "칼로리": "약 500-600kcal",
            "탄수화물": "높음",
            "단백질": "중",
            "지방": "중",
            "추천 보조 메뉴": "단무지, 오이 냉채, 배"
        },
        "훈제오리 순두부찌개": {
            "칼로리": "약 400-500kcal",
            "탄수화물": "중",
            "단백질": "높음",
            "지방": "중",
            "추천 보조 메뉴": "시금치 나물, 귤"
        },
        "부대찌개": {
            "칼로리": "약 500-600kcal",
            "탄수화물": "중",
            "단백질": "높음",
            "지방": "중",
            "추천 보조 메뉴": "열무 김치, 참외"
        },
        "칼국수": {
            "칼로리": "약 400-500kcal",
            "탄수화물": "높음",
            "단백질": "중",
            "지방": "낮음",
            "추천 보조 메뉴": "김가루 주먹밥, 블루베리"
        },
        "파스타": {
            "칼로리": "약 500-600kcal",
            "탄수화물": "높음",
            "단백질": "중",
            "지방": "중",
            "추천 보조 메뉴": "방울토마토 샐러드, 바나나"
        },
        "라면": {
            "칼로리": "약 400-500kcal",
            "탄수화물": "높음",
            "단백질": "낮음",
            "지방": "중",
            "추천 보조 메뉴": "삶은 계란, 어린잎 채소, 딸기"
        }
    }

    # 랜덤 메뉴 선택 함수
    def select_random_menu():
        return random.choice(list(menus.keys()))

    # 두 개의 컬럼 생성
    col1, col2 = st.columns([2, 1])

    with col1:
        # 버튼을 누르면 랜덤 메뉴 선택
        if st.button("🎲 오늘의 메뉴 고르기"):
            selected_menu = select_random_menu()
            st.markdown(f'<p class="medium-font">🍽️ 오늘의 저녁 메뉴는 \'{selected_menu}\' 입니다!</p>', unsafe_allow_html=True)
            
            # 선택된 메뉴의 영양 정보와 추천 보조 메뉴 표시
            st.markdown('<p class="small-font">🍎 영양 정보</p>', unsafe_allow_html=True)
            nutrition_info = menus[selected_menu]
            for key, value in nutrition_info.items():
                if key != "추천 보조 메뉴":
                    st.write(f"{key}: {value}")
            
            st.markdown('<p class="small-font">🥗 추천 보조 메뉴</p>', unsafe_allow_html=True)
            st.write(nutrition_info["추천 보조 메뉴"])

    with col2:
        # 어린이 영양에 대한 팁
        st.markdown('<p class="medium-font">🧒 어린이 영양 팁</p>', unsafe_allow_html=True)
        tips = [
            "다양한 색깔의 과일과 채소를 섭취하도록 권장하세요.",
            "단백질 섭취를 위해 살코기, 생선, 달걀, 두부 등을 골고루 제공하세요.",
            "탄수화물은 가능한 현미, 잡곡 등 정제되지 않은 곡물로 섭취하도록 하세요.",
            "우유나 요구르트 등 칼슘이 풍부한 음식을 매일 섭취하도록 하세요.",
            "물을 충분히 마시도록 권장하고, 과도한 당분이 든 음료는 제한하세요.",
            "튀긴 음식보다는 구운 음식, 찜 요리 등을 선택하세요.",
            "가능한 한 신선한 재료로 만든 음식을 제공하세요."
        ]
        for tip in tips:
            st.markdown(f'<p class="small-font">• {tip}</p>', unsafe_allow_html=True)

    # 모든 메뉴와 영양 정보 표시
    st.markdown('<p class="medium-font">📋 전체 메뉴 목록과 영양 정보</p>', unsafe_allow_html=True)
    for menu, info in menus.items():
        with st.expander(menu):
            for key, value in info.items():
                st.write(f"{key}: {value}")

with tab2:
    st.markdown('<p class="medium-font">🏫 성복초등학교 2024년 9월 급식 메뉴</p>', unsafe_allow_html=True)
    
    # 급식 메뉴 데이터
    school_meals = {
        "2일 월요일": "찹쌀흑임자밥(복), 쇠고기미역국(복) (5.6.16), 소시지멸치볶음(복) (2.5.6.10.13.15.16), 달콤오리불고기(복) (5.6.12.13.16.18), 열무김치(복) (9), 희망우유(복) (2), 딸기칩톡톡마카롱(복) (1.2.6)",
        "3일 화요일": "차수수밥(복), 어린이마라탕(복) (1.5.6.13.16), 비름나물볶음(복) (5), 닭다리살바베큐(복) (5.6.12.13.15), 배추김치(복) (9), 희망우유(복) (2), 귤(복)",
        "4일 수요일": "치킨마요덮밥(복) (1.2.5.6.13.15), 맑은콩나물국(복) (5), 쉬림프샐러드/오리엔탈소스(복) (5.6.9.13), 배추겉절이(복) (9), 갈릭스틱(복) (1.2.5.6), 희망우유(복) (2)",
        "5일 목요일": "보리할맥밥(복), 대구매운탕(복) (5.6.9), 쇠고기새송이조림(복) (1.5.6.13.16), 쑥갓두부무침(복) (5), 배추김치(복) (9), 피자붕어빵(복) (2.5.6.10.12.15.16), 희망우유(복) (2)",
        "6일 금요일": "귀리밥(복), 콩나물김치국(복) (5.9), 용인표고달걀찜(복) (1.5.9), 눈꽃등심찹쌀탕수육(복) (1.5.6.10.13), 깍두기(복) (9), 골드키위(복), 희망우유(복) (2)",
        "9일 월요일": "찰보리밥(복), 청포묵쇠고기무국(복) (5.6.16), 숙주크래미무침(복) (5.6), 혜화동치즈돈까스/소스(복) (1.2.5.6.10.12.13.18), 배추김치(복) (9), 희망우유(복) (2)",
        "10일 화요일": "강낭콩밥(복), 쇠고기버섯찌개(복) (5.6.16), 오향장육(복) (5.6.10.13), 밤야채초무침(복) (5.6.13), 배추겉절이(복) (9), 패스츄리호두과자(복) (1.2.5.6.14), 희망우유(복) (2)",
        "11일 수요일": "추억의도시락세트(복) (1.2.5.6.9.10.13.15.16), 사과오이초무침(복) (13), 하트가마보꼬스틱(복) (1.5.6), 깍두기(복) (9), 희망우유(복) (2), 유기농오렌지주스(복) (13)",
        "12일 목요일": "현미밥(복), 두부애호박국(복) (5.6.10), 수제어묵깻잎볶음(복) (1.5.6.13), 쌀치킨윙튀김(복) (5.6.15), 배추김치(복) (9), 희망우유(복) (2), 포도-청포도(복)",
        "13일 금요일": "참쌀밥(복), 토란탕(복) (5.6.16), 잡채(복) (5.6.10.13.16), 제주흑돼지못난이스테이크/양송이소스(복) (1.2.5.6.10.12.13.15.16), 배추겉절이(복) (9), 희망우유(복) (2), 송편(복)",
        "23일 월요일": "밤밥(복), 경상도식한우쇠고기무국(복) (5.6.16), 버섯콩나물무침(복) (5.13), 팝콘치킨(복) (1.5.6.15), 배추김치(복) (9), 희망우유(복) (2), 친환경배(복)",
        "24일 화요일": "기장밥(복), 강된장찌개(복) (5.6.16), 멕시칸샐러드(복) (1.2.5.6.10.12.15.16), 자장돈육볶음/꽃빵(복) (1.5.6.10.13.16.18), 총각김치(복) (9), 티니핑요그르트딸기(복) (2), 희망우유(복) (2)",
        "25일 수요일": "전복죽(복) (18), 도라지오이진미채무침(복) (5.6.13.17), 오징어먹물콤비네이션피자(복) (1.2.5.6.10.12.13.15.16.17), 배추겉절이(복) (9), 맛나는오미자주스(복) (13), 희망우유(복) (2)",
        "26일 목요일": "녹두밥(복), 홍합살미역국(복) (5.6.18), 메추리알파스타(복) (1.5.6.10.12.13), 포테이토치즈대구커틀렛/콘소스(복) (1.2.5.6.13), 열무김치(복) (9), 희망우유(복) (2), 파인애플(복)",
        "27일 금요일": "혼합잡곡밥(복) (5), 콩비지찌개(복) (5.6.9.10), 쇠고기버섯볶음(복) (5.6.13.16), 궁채들깨가루볶음(복) (5.6.13), 배추김치(복) (9), 희망우유(복) (2), 우리쌀로만든도라에몽만쥬(복) (1.2.5.6)",
        "30일 월요일": "흑미밥(복), 닭고기삼색옹떡이국(복) (1.5.6.15.17), 방풍나물볶음(복) (5.6.13), 유린기(복) (1.2.5.6.13.15), 배추김치(복) (9), 희망우유(복) (2), 대추방울토마토(복) (12)"
    }
    
    # 날짜 선택 드롭다운
    selected_date = st.selectbox("날짜 선택", list(school_meals.keys()))
    
    # 선택된 날짜의 메뉴 표시
    st.markdown(f'<p class="small-font">선택된 날짜: {selected_date}</p>', unsafe_allow_html=True)
    st.write(school_meals[selected_date])
    
    # 알레르기 정보
    st.markdown('<p class="small-font">🚨 식품알레르기 식별정보</p>', unsafe_allow_html=True)
    allergen_info = """
    1.난류 2.우유 3.메밀 4.땅콩 5.대두 6.밀 7.고등어 8.게 9.새우 10.돼지고기 11.복숭아 12.토마토 13.아황산류 14.호두 15.닭고기 16.쇠고기 17.오징어 18.조개류(굴,전복,홍합 포함) 19.잣
    """
    st.write(allergen_info)

# 영양 정보에 대한 참고사항
st.markdown('<p class="small-font highlight">ℹ️ 참고: 위의 영양 정보는 대략적인 추정치이며, 정확한 값은 재료와 조리 방법에 따라 달라질 수 있습니다. 추천 보조 메뉴는 영양 균형을 위한 제안이며, 아이들의 기호에 따라 조절할 수 있습니다.</p>', unsafe_allow_html=True)
